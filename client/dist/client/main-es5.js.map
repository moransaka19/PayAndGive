{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/add-container/add-container.component.ts","webpack:///src/app/add-container/add-container.component.html","webpack:///src/app/add-eat/add-eat.component.ts","webpack:///src/app/add-eat/add-eat.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/backup/backup.component.ts","webpack:///src/app/backup/backup.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/helpers/auth.interceptor.ts","webpack:///src/app/helpers/parse-jwt.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/machines/add-machine/add-machine.component.ts","webpack:///src/app/machines/add-machine/add-machine.component.html","webpack:///src/app/machines/machine-details/machine-details.component.ts","webpack:///src/app/machines/machine-details/machine-details.component.html","webpack:///src/app/machines/machines.component.ts","webpack:///src/app/machines/machines.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/report/report.component.ts","webpack:///src/app/report/report.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddContainerComponent","http","router","route","eats$","get","apiUrl","form","fixedLoadingTime","isEmpty","machineId","snapshot","params","eatId","post","value","subscribe","navigateByUrl","onAddContainer","templateUrl","styleUrls","AddEatComponent","name","price","timeExpiredMin","onAddEat","routes","path","pathMatch","redirectTo","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","createTranslateLoader","AppModule","provide","useClass","multi","defaultLanguage","loader","useFactory","deps","declarations","providers","bootstrap","BackupComponent","backups$","x","onBackup","onRestore","HeaderComponent","translateService","language","events","pipe","authenticated","localStorage","getItem","unique_name","isAdmin","role","removeItem","setTimeout","use","changeLanguage","AuthInterceptor","next","idToken","cloned","clone","headers","set","handle","parseJwt","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","LoginComponent","login","password","setItem","onLogin","AddMachineComponent","state","onAddMachine","MachineDetailsComponent","activatedRoute","machine$","m","containers","filter","isDeleted","MachinesComponent","machines$","RegisterComponent","onRegister","ReportComponent","containers$","reduce","a","b","data","document","getElementById","canvas","fileWidth","fileHeight","height","width","fileUrl","toDataURL","pdf","addImage","save","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  templateUrl: './add-container.component.html',\r\n  styleUrls: ['./add-container.component.scss']\r\n})\r\nexport class AddContainerComponent implements OnInit {\r\n\r\n  eats$: Observable<any>;\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private http: HttpClient,\r\n              private router: Router,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.eats$ = this.http.get(`${environment.apiUrl}/eats`);\r\n\r\n    this.form = new FormGroup({\r\n      fixedLoadingTime: new FormControl(),\r\n      isEmpty: new FormControl(false),\r\n      machineId: new FormControl(this.route.snapshot.params.id),\r\n      eatId: new FormControl()\r\n    });\r\n  }\r\n\r\n  onAddContainer() {\r\n    this.http.post(`${environment.apiUrl}/containers`, this.form.value)\r\n      .subscribe(() => this.router.navigateByUrl(`/machines/${this.route.snapshot.params.id}`));\r\n  }\r\n}\r\n","<form class=\"w-50\" [formGroup]=\"form\">\r\n    <div class=\"form-check mb-3\">\r\n        <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"isEmpty\" id=\"isEmpty\">\r\n        <label class=\"form-check-label\" for=\"isEmpty\">\r\n          {{'IS_EMPTY' | translate}}\r\n        </label>\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n      {{'LOADING_TIME' | translate}}:\r\n        <input required type=\"datetime-local\" formControlName=\"fixedLoadingTime\" name=\"trip-start\">\r\n    </div>\r\n\r\n    <div class=\"form-group mb-3\">\r\n        <select required class=\"form-control\" formControlName=\"eatId\">\r\n            <option *ngFor=\"let eat of eats$ | async\" [value]=\"eat.id\">{{eat.name}}</option>\r\n        </select>\r\n    </div>\r\n\r\n    <button class=\"btn btn-success\" type=\"submit\" (click)=\"onAddContainer()\">{{'ADD_MACHINE' | translate}}</button>\r\n</form>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  templateUrl: './add-eat.component.html',\r\n  styleUrls: ['./add-eat.component.scss']\r\n})\r\nexport class AddEatComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private http: HttpClient,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      name: new FormControl(),\r\n      price: new FormControl(),\r\n      timeExpiredMin: new FormControl()\r\n    });\r\n  }\r\n\r\n  onAddEat() {\r\n    this.http.post(`${environment.apiUrl}/eats`, this.form.value)\r\n      .subscribe(() => this.router.navigateByUrl('/machines'));\r\n  }\r\n}\r\n","<form class=\"w-50\" [formGroup]=\"form\">\r\n    <div class=\"input-group mb-3\">\r\n        <input class=\"form-control\" required type=\"text\" formControlName=\"name\" name=\"trip-start\" placeholder=\"Name\">\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n        <input class=\"form-control\" required type=\"number\" formControlName=\"price\" name=\"trip-start\" placeholder=\"Price\">\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n        <input class=\"form-control\" required type=\"number\" formControlName=\"timeExpiredMin\" name=\"trip-start\" placeholder=\"{{'EXPIRES_IN' | translate}}\">\r\n    </div>\r\n\r\n    <button class=\"btn btn-success\" type=\"submit\" (click)=\"onAddEat()\">{{ 'ADD_EAT' | translate}}</button>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddContainerComponent } from './add-container/add-container.component';\r\nimport { AddEatComponent } from './add-eat/add-eat.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AddMachineComponent } from './machines/add-machine/add-machine.component';\r\nimport { MachineDetailsComponent } from './machines/machine-details/machine-details.component';\r\nimport { MachinesComponent } from './machines/machines.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport {BackupComponent} from './backup/backup.component';\r\nimport {ReportComponent} from './report/report.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    redirectTo: 'login'\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent\r\n  },\r\n  {\r\n    path: 'machines',\r\n    component: MachinesComponent\r\n  },\r\n  {\r\n    path: 'machines/add',\r\n    component: AddMachineComponent\r\n  },\r\n  {\r\n    path: 'machines/:id',\r\n    component: MachineDetailsComponent\r\n  },\r\n  {\r\n    path: 'machines/:id/add-container',\r\n    component: AddContainerComponent\r\n  },\r\n  {\r\n    path: 'eat/add',\r\n    component: AddEatComponent\r\n  },\r\n  {\r\n    path: 'backup',\r\n    component: BackupComponent\r\n  },\r\n  {\r\n    path: 'report',\r\n    component: ReportComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'client';\r\n}\r\n","<app-header></app-header>\r\n\r\n<br><br><br>\r\n\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpClientModule, HTTP_INTERCEPTORS, HttpClient} from '@angular/common/http';\r\nimport {HeaderComponent} from './header/header.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {AuthInterceptor} from './helpers/auth.interceptor';\r\nimport {MachinesComponent} from './machines/machines.component';\r\nimport {MachineDetailsComponent} from './machines/machine-details/machine-details.component';\r\nimport {AddMachineComponent} from './machines/add-machine/add-machine.component';\r\nimport {AddContainerComponent} from './add-container/add-container.component';\r\nimport {AddEatComponent} from './add-eat/add-eat.component';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\r\nimport {BackupComponent} from './backup/backup.component';\nimport { ReportComponent } from './report/report.component';\r\n\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HeaderComponent,\r\n    RegisterComponent,\r\n    MachinesComponent,\r\n    MachineDetailsComponent,\r\n    AddMachineComponent,\r\n    AddContainerComponent,\r\n    AddEatComponent,\r\n    BackupComponent,\r\n    ReportComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      defaultLanguage: 'en',\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: (createTranslateLoader),\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n  ],\r\n  providers: [{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs';\n\n@Component({\n  selector: 'app-backup',\n  templateUrl: './backup.component.html',\n  styleUrls: ['./backup.component.scss']\n})\nexport class BackupComponent implements OnInit {\n\n  backups$: Observable<string[]>;\n\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit(): void {\n    this.backups$ = this.http.get<string[]>(`${environment.apiUrl}/admin/backups`);\n  }\n\n  onBackup() {\n    this.http.post(`${environment.apiUrl}/admin/backup`, null)\n      .subscribe(x => {\n        this.backups$ = this.http.get<string[]>(`${environment.apiUrl}/admin/backups`);\n      });\n  }\n\n  onRestore(value: string) {\n    this.http.post(`${environment.apiUrl}/admin/restore/${value}`, null)\n      .subscribe();\n  }\n}\n","<button class=\"btn btn-success\" (click)=\"onBackup()\">Backup</button>\n\n<br>\n<select class=\"form-select\" #select>\n  <option selected>Select a backup</option>\n  <option *ngFor=\"let backup of backups$ | async\" [value]=\"backup\">{{backup}}</option>\n</select>\n\n<button class=\"btn btn-danger\" (click)=\"onRestore(select.value)\">Restore</button>\n","import {Component, OnInit, ChangeDetectionStrategy} from '@angular/core';\r\nimport {NavigationEnd, Router} from '@angular/router';\r\nimport {filter, startWith} from 'rxjs/operators';\r\nimport {parseJwt} from '../helpers/parse-jwt';\r\nimport {TranslateService} from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  authenticated: boolean;\r\n  name: string;\r\n  isAdmin: boolean;\r\n  language = true;\r\n\r\n  constructor(private router: Router,\r\n              private translateService: TranslateService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.router.events.pipe(\r\n      filter(x => x instanceof NavigationEnd),\r\n      startWith(false)\r\n    )\r\n      .subscribe(() => {\r\n        this.authenticated = !!localStorage.getItem('token');\r\n        this.name = this.authenticated && parseJwt(localStorage.getItem('token')).unique_name;\r\n        this.isAdmin = this.authenticated && parseJwt(localStorage.getItem('token')).role === 'Admin';\r\n      });\r\n  }\r\n\r\n  onLogout() {\r\n    localStorage.removeItem('token');\r\n    setTimeout(() => this.router.navigateByUrl('login'), 5);\r\n  }\r\n\r\n  changeLanguage() {\r\n    this.language = !this.language;\r\n    if (this.language) {\r\n      this.translateService.use('en');\r\n    } else {\r\n      this.translateService.use('ua');\r\n    }\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\" routerLink=\"\">Pay And Give</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li class=\"nav-item\" *ngIf=\"authenticated\">\r\n          <a class=\"nav-link\" routerLink=\"register\">{{ 'REGISTER_USER' | translate }}</a>\r\n        </li>\r\n        <li class=\"nav-item\" *ngIf=\"authenticated\">\r\n          <a class=\"nav-link\" routerLink=\"backup\">Backup</a>\r\n        </li>\r\n        <li class=\"nav-item\" *ngIf=\"authenticated\">\r\n          <a class=\"nav-link\" routerLink=\"machines\">{{ 'MACHINES' | translate}}</a>\r\n        </li>\r\n        <li class=\"nav-item\" *ngIf=\"authenticated\">\r\n          <a class=\"nav-link\" routerLink=\"eat/add\">{{ 'ADD_EAT' | translate }}</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"d-flex\">\r\n      <ul class=\"navbar-nav mb-2 mb-lg-0\">\r\n        <li class=\"nav-item\" (click)=\"changeLanguage()\">\r\n          <span style=\"cursor: pointer\" class=\"nav-link\">{{language ? 'en' : 'ua'}}</span>\r\n        </li>\r\n        <ng-container *ngIf=\"!authenticated; else logout\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" aria-current=\"page\" routerLink=\"login\">{{ 'LOGIN' | translate }}</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" aria-current=\"page\" routerLink=\"register\">{{'REGISTER' | translate}}</a>\r\n          </li>\r\n        </ng-container>\r\n      </ul>\r\n    </div>\r\n\r\n    <ng-template #logout>\r\n      <li class=\"nav-item\">\r\n        <span style=\"cursor: pointer\" class=\"nav-link\">{{name}}</span>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" aria-current=\"page\" href=\"#\" (click)=\"onLogout()\">{{'LOGOUT' | translate}}</a>\r\n      </li>\r\n    </ng-template>\r\n  </div>\r\n</nav>\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    intercept(req: HttpRequest<any>,\r\n              next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        const idToken = localStorage.getItem('token');\r\n\r\n        if (idToken) {\r\n            const cloned = req.clone({\r\n                headers: req.headers.set('Authorization',`Bearer ${idToken}`)\r\n            });\r\n\r\n            return next.handle(cloned);\r\n        } else {\r\n            return next.handle(req);\r\n        }\r\n    }\r\n}","export function parseJwt(token: string) {\r\n    const base64Url = token.split('.')[1];\r\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map((c) =>\r\n        '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\r\n\r\n    return JSON.parse(jsonPayload);\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private http: HttpClient,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      login: new FormControl(''),\r\n      password: new FormControl('')\r\n    });\r\n  }\r\n\r\n  onLogin() {\r\n    this.http.post(`${environment.apiUrl}/auth/login`, this.form.value)\r\n      .subscribe(({ token }: { token: string }) => {\r\n        localStorage.setItem('token', token);\r\n        this.router.navigateByUrl('machines');\r\n      });\r\n  }\r\n}\r\n","<form class=\"w-50\" [formGroup]=\"form\">\r\n    <div class=\"input-group mb-3\">\r\n        <input formControlName=\"login\" type=\"text\" class=\"form-control\" placeholder=\"{{'USERNAME' | translate}}\" aria-label=\"Username\"\r\n            aria-describedby=\"basic-addon1\">\r\n    </div>\r\n    <div class=\"input-group mb-3\">\r\n        <input formControlName=\"password\" type=\"password\" class=\"form-control\" placeholder=\"{{'PASSWORD' | translate}}\" aria-label=\"Username\"\r\n            aria-describedby=\"basic-addon1\">\r\n    </div>\r\n\r\n    <button class=\"btn btn-success\" type=\"submit\" (click)=\"onLogin()\">{{'LOGIN' | translate}}</button>\r\n</form>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  templateUrl: './add-machine.component.html',\r\n  styleUrls: ['./add-machine.component.scss']\r\n})\r\nexport class AddMachineComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private http: HttpClient,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      state: new FormControl(),\r\n      value: new FormControl()\r\n    });\r\n  }\r\n\r\n  onAddMachine() {\r\n    this.http.post(`${environment.apiUrl}/machines`, this.form.value)\r\n      .subscribe(() => this.router.navigateByUrl('/machines'));\r\n  }\r\n}\r\n","<form class=\"w-50\" [formGroup]=\"form\">\r\n    <div class=\"form-group mb-3\">\r\n        <select required class=\"form-control\" formControlName=\"state\">\r\n            <option value=\"Idle\">Idle</option>\r\n            <option value=\"Charging\">Charging</option>\r\n            <option value=\"Loading\">Loading</option>\r\n            <option value=\"In Transit\">In Transit</option>\r\n            <option value=\"Canceled\">Canceled</option>\r\n        </select>\r\n    </div>\r\n    <div class=\"input-group mb-3\">\r\n        <input required formControlName=\"value\" type=\"number\" class=\"form-control\" placeholder=\"Value\" aria-label=\"Value\"\r\n            aria-describedby=\"basic-addon1\">\r\n    </div>\r\n\r\n    <button class=\"btn btn-success\" type=\"submit\" (click)=\"onAddMachine()\">{{'ADD_MACHINE' | translate}}</button>\r\n</form>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport {map, tap} from 'rxjs/operators';\r\n\r\n@Component({\r\n  templateUrl: './machine-details.component.html',\r\n  styleUrls: ['./machine-details.component.scss']\r\n})\r\nexport class MachineDetailsComponent implements OnInit {\r\n\r\n  machine$: Observable<any>;\r\n\r\n  constructor(private http: HttpClient,\r\n              private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.machine$ = this.http.get<any>(`${environment.apiUrl}/machines/${this.activatedRoute.snapshot.params.id}`).pipe(\r\n      tap(m => m.containers = m.containers.filter(x => ! x.isDeleted))\r\n    );\r\n  }\r\n}\r\n","<ng-container *ngIf=\"machine$ | async as machine\">\r\n    <h2>Id: {{machine.id}}</h2>\r\n\r\n    <div><b>{{'STATE' | translate}}: </b> {{machine.state}}</div>\r\n    <div><b>{{'VALUE' | translate}}: </b> {{machine.value}}</div>\r\n\r\n    <button class=\"btn btn-success\" routerLink=\"./add-container\" *ngIf=\"machine.containers.length < machine.value\">\r\n      {{'ADD_CONTAINER' | translate}}\r\n    </button>\r\n\r\n    <div>{{'CONTAINERS' | translate}}: </div>\r\n\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">{{'EAT' | translate}}</th>\r\n                <th scope=\"col\">{{'PRICE' | translate}}</th>\r\n                <th scope=\"col\">{{'LOADING_TIME' | translate}}</th>\r\n                <th scope=\"col\">{{'EMPTY' | translate}}</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let machine of machine.containers\">\r\n                <th scope=\"row\">{{machine.id}}</th>\r\n                <td>{{machine.eat.name}}</td>\r\n                <td>{{machine.eat.price}}</td>\r\n                <td>{{machine.fixedLoadingTime | date : 'short'}}</td>\r\n                <td>{{machine.isDeleted}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</ng-container>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  templateUrl: './machines.component.html',\r\n  styleUrls: ['./machines.component.scss']\r\n})\r\nexport class MachinesComponent implements OnInit {\r\n\r\n  machines$: Observable<any>;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.machines$ = this.http.get(`${environment.apiUrl}/machines`);\r\n  }\r\n}\r\n","<h3>Machines</h3>\r\n\r\n<button class=\"btn btn-success\" routerLink=\"/machines/add\">{{ 'ADD_MACHINE' | translate }}</button>\r\n\r\n<table class=\"table table-hover\">\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">#</th>\r\n        <th scope=\"col\">{{'STATE' | translate}}</th>\r\n        <th scope=\"col\">{{'VALUE' | translate}}</th>\r\n        <th scope=\"col\">{{'CONTAINERS' | translate}}</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr style=\"cursor: pointer\" *ngFor=\"let machine of machines$ | async\" routerLink=\"/machines/{{machine.id}}\">\r\n        <th scope=\"row\">{{machine.id}}</th>\r\n        <td>{{machine.state}}</td>\r\n        <td>{{machine.value}}</td>\r\n        <td>{{machine.containers.length}}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  get isAuthenticated() {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n\r\n  constructor(private http: HttpClient,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      login: new FormControl(''),\r\n      password: new FormControl(''),\r\n      name: new FormControl(''),\r\n      role: new FormControl('Customer'),\r\n    });\r\n  }\r\n\r\n  onRegister() {\r\n    this.http.post(`${environment.apiUrl}/auth/registration`, this.form.value)\r\n      .subscribe(({ token }: { token: string }) => {\r\n        if (!localStorage.getItem('token')) {\r\n          localStorage.setItem('token', token);\r\n        }\r\n\r\n        setTimeout(() => this.router.navigateByUrl('machines'), 50);\r\n      });\r\n  }\r\n}\r\n","<form class=\"w-50\" [formGroup]=\"form\">\r\n    <div class=\"input-group mb-3\">\r\n        <input formControlName=\"login\" type=\"text\" class=\"form-control\" placeholder=\"{{'USERNAME' | translate}}\" aria-label=\"Username\"\r\n            aria-describedby=\"basic-addon1\">\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n        <input formControlName=\"name\" type=\"text\" class=\"form-control\" placeholder=\"{{'NAME' | translate}}\" aria-label=\"Username\"\r\n            aria-describedby=\"basic-addon1\">\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n        <input formControlName=\"password\" type=\"password\" class=\"form-control\" placeholder=\"{{'PASSWORD' | translate}}\"\r\n            aria-label=\"Username\" aria-describedby=\"basic-addon1\">\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\" *ngIf=\"isAuthenticated\">\r\n        <input formControlName=\"role\" id=\"a1\" type=\"radio\" placeholder=\"{{'USERNAME' | translate}}\"\r\n            aria-label=\"Username\" aria-describedby=\"basic-addon1\" value=\"Admin\">\r\n        <label for=\"a1\">{{'ADMIN' | translate}}</label>\r\n\r\n        <input formControlName=\"role\" id=\"a2\" type=\"radio\" placeholder=\"{{'USERNAME' | translate}}\"\r\n            aria-label=\"Username\" aria-describedby=\"basic-addon1\" value=\"Customer\">\r\n        <label for=\"a2\">{{'CUSTOMER' | translate}}</label>\r\n\r\n        <input formControlName=\"role\" id=\"a3\" type=\"radio\" placeholder=\"{{'USERNAME' | translate}}\"\r\n            aria-label=\"Username\" aria-describedby=\"basic-addon1\" value=\"Operator\">\r\n        <label for=\"a3\">{{'OPERATOR' | translate}}</label>\r\n    </div>\r\n\r\n    <button class=\"btn btn-success\" type=\"submit\" (click)=\"onRegister()\">{{'REGISTER' | translate}}</button>\r\n</form>\r\n","import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Container} from '@angular/compiler/src/i18n/i18n_ast';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {map} from 'rxjs/operators';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.scss']\n})\nexport class ReportComponent implements OnInit {\n  machines$: Observable<any[]>;\n  containers$: Observable<any[]>;\n  machineId: number;\n\n  constructor(private http: HttpClient) {\n    this.machines$ = http.get<any[]>(environment.apiUrl + '/machines');\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSelectMachine(id) {\n    this.containers$ = this.http.get<any[]>(environment.apiUrl + '/containers/sold-machines/' + id);\n    this.machineId = id;\n  }\n\n  getContainersSumPrice(containers: any[]) {\n    return containers?.map(x => x.price).reduce((a, b) => a + b, 0);\n  }\n\n  onDownloadPdf() {\n    const data = document.getElementById ('report');\n    html2canvas(data).then(canvas => {\n      const fileWidth = 200;\n      const fileHeight = canvas.height * fileWidth / canvas.width;\n\n      const fileUrl = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'mm', 'a4');\n      pdf.addImage(fileUrl, 'PNG', 0, 0, fileWidth, fileHeight);\n      pdf.save('report.pdf');\n    });\n  }\n}\n","<div class=\"dropdown\">\n  <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    Dropdown button\n  </button>\n  <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n    <a class=\"dropdown-item\" *ngFor=\"let machine of machines$ | async\" (click)=\"onSelectMachine(machine.id)\">{{machine.id}}</a>\n  </div>\n</div>\n\n<button *ngIf=\"machineId\" class=\"btn btn-primary\" (click)=\"onDownloadPdf()\">Download pdf</button>\n\n<div *ngIf=\"machineId\" id=\"report\">\n  <h2>Machine Id: {{machineId}}</h2>\n\n  <table class=\"table table-sm\">\n    <thead>\n    <tr>\n      <th scope=\"col\">Container</th>\n      <th scope=\"col\">Eat</th>\n      <th scope=\"col\">Price</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let container of containers$ | async\">\n      <td>{{container.id}}</td>\n      <td>{{container.name}}</td>\n      <td>{{container.price}}</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>Full price</td>\n      <td>{{getContainersSumPrice(containers$ | async)}}</td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://localhost:5001/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}